"use strict";(self.webpackChunkvuepress_theme_hope_template=self.webpackChunkvuepress_theme_hope_template||[]).push([[3081],{6262:(i,s)=>{s.A=(i,s)=>{const e=i.__vccOpts||i;for(const[i,a]of s)e[i]=a;return e}},5808:(i,s,e)=>{e.r(s),e.d(s,{comp:()=>h,data:()=>n});var a=e(641);const t={},h=(0,e(6262).A)(t,[["render",function(i,s){return(0,a.uX)(),(0,a.CE)("div",null,s[0]||(s[0]=[(0,a.Fv)('<h1 id="清空-git-仓库的提交记录并重置为全新状态" tabindex="-1"><a class="header-anchor" href="#清空-git-仓库的提交记录并重置为全新状态"><span>清空 Git 仓库的提交记录并重置为全新状态</span></a></h1><p>在使用 Git 进行版本控制时，有时我们可能需要彻底清空之前的提交记录，以便将仓库重置为一个干净的状态。这在进行项目重构、合并仓库、或清理不必要的历史记录时特别有用</p><div class="hint-container caution"><p class="hint-container-title">警告</p><p>前提远程分支需要去除保护-解除保护不被强制推送.因为后续需要用到强制推送</p></div><p>第一步:创建一个全新分支</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> checkout</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --orphan</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clean_log</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>--orphan</code>:该选项用于创建一个没有任何提交记录的新分支。这个新分支的历史记录与当前分支无关，相当于一个全新的起点</li><li><code>clean_log</code>:是新分支的名称，你可以根据需要更改为其他名称</li></ul><p>第二步:提交到本地仓库</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -A</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -am</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;fist commit&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>第三步:删除旧的main分支</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>git branch -d 会在删除前检查merge状态（其与上游分支或者与head）。<br> git branch -D 是git branch --delete --force的简写，它会直接删除。</p></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> branch</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -D</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> main</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>第四步:将当前分支重命名为main</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> branch</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> main</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>第五步:强制推送到远程分支</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> push</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> origin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> main</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>第六步:设置本地main分支和远程分支关联</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> push</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --set-upstream</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> origin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> master</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>可以简写为</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> push</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -u</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> origin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> main</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>',20)]))}]]),n=JSON.parse('{"path":"/book/git/git-upgrade/orphan.html","title":"git删除操作历史记录","lang":"zh-CN","frontmatter":{"title":"git删除操作历史记录","icon":"flat-color-icons:document","order":1,"category":["git"],"tag":["git"],"description":"清空 Git 仓库的提交记录并重置为全新状态 在使用 Git 进行版本控制时，有时我们可能需要彻底清空之前的提交记录，以便将仓库重置为一个干净的状态。这在进行项目重构、合并仓库、或清理不必要的历史记录时特别有用 警告 前提远程分支需要去除保护-解除保护不被强制推送.因为后续需要用到强制推送 第一步:创建一个全新分支 --orphan:该选项用于创建一个...","head":[["meta",{"property":"og:url","content":"https://www.youhujun.com/book/git/git-upgrade/orphan.html"}],["meta",{"property":"og:site_name","content":"游鹄君博客"}],["meta",{"property":"og:title","content":"git删除操作历史记录"}],["meta",{"property":"og:description","content":"清空 Git 仓库的提交记录并重置为全新状态 在使用 Git 进行版本控制时，有时我们可能需要彻底清空之前的提交记录，以便将仓库重置为一个干净的状态。这在进行项目重构、合并仓库、或清理不必要的历史记录时特别有用 警告 前提远程分支需要去除保护-解除保护不被强制推送.因为后续需要用到强制推送 第一步:创建一个全新分支 --orphan:该选项用于创建一个..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-13T08:47:37.000Z"}],["meta",{"property":"article:tag","content":"git"}],["meta",{"property":"article:modified_time","content":"2025-02-13T08:47:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"git删除操作历史记录\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-13T08:47:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"游鹄君\\",\\"url\\":\\"https://youhujun.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1739436457000,"updatedTime":1739436457000,"contributors":[{"name":"youhujun","username":"youhujun","email":"2900976495@qq.com","commits":1}]},"readingTime":{"minutes":1.27,"words":382},"filePathRelative":"book/git/git-upgrade/orphan.md","localizedDate":"2025年2月13日","excerpt":"\\n<p>在使用 Git 进行版本控制时，有时我们可能需要彻底清空之前的提交记录，以便将仓库重置为一个干净的状态。这在进行项目重构、合并仓库、或清理不必要的历史记录时特别有用</p>\\n<div class=\\"hint-container caution\\">\\n<p class=\\"hint-container-title\\">警告</p>\\n<p>前提远程分支需要去除保护-解除保护不被强制推送.因为后续需要用到强制推送</p>\\n</div>\\n<p>第一步:创建一个全新分支</p>\\n<div class=\\"language-bash line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"bash\\" data-title=\\"bash\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">git</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> checkout</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> --orphan</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> clean_log</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}')}}]);