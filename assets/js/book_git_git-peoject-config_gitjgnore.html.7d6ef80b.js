"use strict";(self.webpackChunkvuepress_theme_hope_template=self.webpackChunkvuepress_theme_hope_template||[]).push([[5551],{6262:(s,i)=>{i.A=(s,i)=>{const n=s.__vccOpts||s;for(const[s,a]of i)n[s]=a;return n}},1532:(s,i,n)=>{n.r(i),n.d(i,{comp:()=>l,data:()=>t});var a=n(641);const e={},l=(0,n(6262).A)(e,[["render",function(s,i){return(0,a.uX)(),(0,a.CE)("div",null,i[0]||(i[0]=[(0,a.Fv)('<h1 id="配置-gitignore忽略规则" tabindex="-1"><a class="header-anchor" href="#配置-gitignore忽略规则"><span>配置.gitignore忽略规则</span></a></h1><h2 id="gitignore-过滤规则" tabindex="-1"><a class="header-anchor" href="#gitignore-过滤规则"><span>.gitignore 过滤规则</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>#表示此为注释,将被Git忽略</span></span>\n<span class="line"><span>#以斜杠&quot;/&quot;开头表示目录;</span></span>\n<span class="line"><span>#以星号&quot;*&quot;通配多个字符;</span></span>\n<span class="line"><span>#以问号&quot;?&quot;通配单个字符;</span></span>\n<span class="line"><span>#以方括号&quot;[]&quot;包含单个字符的匹配列表;</span></span>\n<span class="line"><span>#以叹号&quot;!&quot;表示不忽略(跟踪)匹配到的文件或目录;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># *.a             表示忽略所有 .a 结尾的文件</span></span>\n<span class="line"><span># !lib.a          表示但lib.a除外</span></span>\n<span class="line"><span># /TODO           表示仅仅忽略项目根目录下的 TODO 文件，不包括 subdir/TODO</span></span>\n<span class="line"><span># build/          表示忽略 build/目录下的所有文件，过滤整个build文件夹；</span></span>\n<span class="line"><span># doc/*.txt       表示会忽略doc/notes.txt但不包括 doc/server/arch.txt</span></span>\n<span class="line"><span> </span></span>\n<span class="line"><span># bin/:           表示忽略当前路径下的bin文件夹，该文件夹下的所有内容都会被忽略，不忽略 bin 文件</span></span>\n<span class="line"><span># /bin:           表示忽略根目录下的bin文件</span></span>\n<span class="line"><span># /*.c:           表示忽略cat.c，不忽略 build/cat.c</span></span>\n<span class="line"><span># debug/*.obj:    表示忽略debug/io.obj，不忽略 debug/common/io.obj和tools/debug/io.obj</span></span>\n<span class="line"><span># **/foo:         表示忽略/foo,a/foo,a/b/foo等</span></span>\n<span class="line"><span># a/**/b:         表示忽略a/b, a/x/b,a/x/y/b等</span></span>\n<span class="line"><span># !/bin/run.sh    表示不忽略bin目录下的run.sh文件</span></span>\n<span class="line"><span># *.log:          表示忽略所有 .log 文件</span></span>\n<span class="line"><span># config.php:     表示忽略当前路径的 config.php 文件</span></span>\n<span class="line"><span># /mtk/           表示过滤整个文件夹</span></span>\n<span class="line"><span># *.zip           表示过滤所有.zip文件</span></span>\n<span class="line"><span># /mtk/do.c       表示过滤某个具体文件</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="检查规则是否错误-git-check-ignore" tabindex="-1"><a class="header-anchor" href="#检查规则是否错误-git-check-ignore"><span>检查规则是否错误 git check-ignore</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> check-ignore</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 文件名</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="保留一个空目录" tabindex="-1"><a class="header-anchor" href="#保留一个空目录"><span>保留一个空目录</span></a></h3><p>项目有的时候为了代码目录的完整性，需要保留目录本身，目录里面的文件都忽略。比如涉及用户上传相关的文件需要忽略，而上传目录有的时候因为权限的问题无法自动创建，所以需要保留目录本身</p><p>在该目录下添加一个.gitignore文件内容如下:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>*</span></span>\n<span class="line"><span>!.gitignore</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>还有一种情况是目录里面的文件不是忽略的，只是由于git无法提交空目录，所以可以在空目录中添加一个文件占位符，我们一般叫做.gitkeep文件，里面内容是空的，这样目录就可以提交了</p></div><h2 id="重新添加已经被忽略过的文件-夹" tabindex="-1"><a class="header-anchor" href="#重新添加已经被忽略过的文件-夹"><span>重新添加已经被忽略过的文件（夹）</span></a></h2><h3 id="第一种方法-修改-gitignore文件规则-然后" tabindex="-1"><a class="header-anchor" href="#第一种方法-修改-gitignore文件规则-然后"><span>第一种方法 修改.gitignore文件规则,然后</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="第二种方法" tabindex="-1"><a class="header-anchor" href="#第二种方法"><span>第二种方法</span></a></h3><div class="hint-container tip"><p class="hint-container-title">提示</p><p>重新添加已经被忽略过的文件时，我们仅仅使用git add是不行的，因为git仓库中根本没有那个文件，这时候我们需要加上-f参数来强制添加到仓库中，然后在提交</p></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  路径/文件</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="忽略已经提交过的文件" tabindex="-1"><a class="header-anchor" href="#忽略已经提交过的文件"><span>忽略已经提交过的文件</span></a></h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>有的时候我们需要忽略掉以前提交过的文件或者目录，因为git已经索引了该文件或目录,所以这时我们先在.gitignore中设置该文件为忽略 然后我们要删除掉缓存</p></div><h3 id="忽略文件" tabindex="-1"><a class="header-anchor" href="#忽略文件"><span>忽略文件</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --cached</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  文件名</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="忽略目录" tabindex="-1"><a class="header-anchor" href="#忽略目录"><span>忽略目录</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -r</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --cached</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  目录/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>',22)]))}]]),t=JSON.parse('{"path":"/book/git/git-peoject-config/gitjgnore.html","title":".gitignore忽略规则","lang":"zh-CN","frontmatter":{"title":".gitignore忽略规则","icon":"flat-color-icons:document","order":1,"category":["git"],"tag":["git"],"description":"配置.gitignore忽略规则 .gitignore 过滤规则 检查规则是否错误 git check-ignore 保留一个空目录 项目有的时候为了代码目录的完整性，需要保留目录本身，目录里面的文件都忽略。比如涉及用户上传相关的文件需要忽略，而上传目录有的时候因为权限的问题无法自动创建，所以需要保留目录本身 在该目录下添加一个.gitignore文件...","head":[["meta",{"property":"og:url","content":"https://www.youhujun.com/book/git/git-peoject-config/gitjgnore.html"}],["meta",{"property":"og:site_name","content":"游鹄君博客"}],["meta",{"property":"og:title","content":".gitignore忽略规则"}],["meta",{"property":"og:description","content":"配置.gitignore忽略规则 .gitignore 过滤规则 检查规则是否错误 git check-ignore 保留一个空目录 项目有的时候为了代码目录的完整性，需要保留目录本身，目录里面的文件都忽略。比如涉及用户上传相关的文件需要忽略，而上传目录有的时候因为权限的问题无法自动创建，所以需要保留目录本身 在该目录下添加一个.gitignore文件..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-13T08:47:37.000Z"}],["meta",{"property":"article:tag","content":"git"}],["meta",{"property":"article:modified_time","content":"2025-02-13T08:47:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\".gitignore忽略规则\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-13T08:47:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"游鹄君\\",\\"url\\":\\"https://youhujun.github.io\\"}]}"]]},"headers":[{"level":2,"title":".gitignore 过滤规则","slug":"gitignore-过滤规则","link":"#gitignore-过滤规则","children":[{"level":3,"title":"检查规则是否错误 git check-ignore","slug":"检查规则是否错误-git-check-ignore","link":"#检查规则是否错误-git-check-ignore","children":[]},{"level":3,"title":"保留一个空目录","slug":"保留一个空目录","link":"#保留一个空目录","children":[]}]},{"level":2,"title":"重新添加已经被忽略过的文件（夹）","slug":"重新添加已经被忽略过的文件-夹","link":"#重新添加已经被忽略过的文件-夹","children":[{"level":3,"title":"第一种方法 修改.gitignore文件规则,然后","slug":"第一种方法-修改-gitignore文件规则-然后","link":"#第一种方法-修改-gitignore文件规则-然后","children":[]},{"level":3,"title":"第二种方法","slug":"第二种方法","link":"#第二种方法","children":[]}]},{"level":2,"title":"忽略已经提交过的文件","slug":"忽略已经提交过的文件","link":"#忽略已经提交过的文件","children":[{"level":3,"title":"忽略文件","slug":"忽略文件","link":"#忽略文件","children":[]},{"level":3,"title":"忽略目录","slug":"忽略目录","link":"#忽略目录","children":[]}]}],"git":{"createdTime":1739436457000,"updatedTime":1739436457000,"contributors":[{"name":"youhujun","username":"youhujun","email":"2900976495@qq.com","commits":1}]},"readingTime":{"minutes":2.51,"words":753},"filePathRelative":"book/git/git-peoject-config/gitjgnore.md","localizedDate":"2025年2月13日","excerpt":"\\n<h2>.gitignore 过滤规则</h2>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>#表示此为注释,将被Git忽略</span></span>\\n<span class=\\"line\\"><span>#以斜杠\\"/\\"开头表示目录;</span></span>\\n<span class=\\"line\\"><span>#以星号\\"*\\"通配多个字符;</span></span>\\n<span class=\\"line\\"><span>#以问号\\"?\\"通配单个字符;</span></span>\\n<span class=\\"line\\"><span>#以方括号\\"[]\\"包含单个字符的匹配列表;</span></span>\\n<span class=\\"line\\"><span>#以叹号\\"!\\"表示不忽略(跟踪)匹配到的文件或目录;</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span># *.a             表示忽略所有 .a 结尾的文件</span></span>\\n<span class=\\"line\\"><span># !lib.a          表示但lib.a除外</span></span>\\n<span class=\\"line\\"><span># /TODO           表示仅仅忽略项目根目录下的 TODO 文件，不包括 subdir/TODO</span></span>\\n<span class=\\"line\\"><span># build/          表示忽略 build/目录下的所有文件，过滤整个build文件夹；</span></span>\\n<span class=\\"line\\"><span># doc/*.txt       表示会忽略doc/notes.txt但不包括 doc/server/arch.txt</span></span>\\n<span class=\\"line\\"><span> </span></span>\\n<span class=\\"line\\"><span># bin/:           表示忽略当前路径下的bin文件夹，该文件夹下的所有内容都会被忽略，不忽略 bin 文件</span></span>\\n<span class=\\"line\\"><span># /bin:           表示忽略根目录下的bin文件</span></span>\\n<span class=\\"line\\"><span># /*.c:           表示忽略cat.c，不忽略 build/cat.c</span></span>\\n<span class=\\"line\\"><span># debug/*.obj:    表示忽略debug/io.obj，不忽略 debug/common/io.obj和tools/debug/io.obj</span></span>\\n<span class=\\"line\\"><span># **/foo:         表示忽略/foo,a/foo,a/b/foo等</span></span>\\n<span class=\\"line\\"><span># a/**/b:         表示忽略a/b, a/x/b,a/x/y/b等</span></span>\\n<span class=\\"line\\"><span># !/bin/run.sh    表示不忽略bin目录下的run.sh文件</span></span>\\n<span class=\\"line\\"><span># *.log:          表示忽略所有 .log 文件</span></span>\\n<span class=\\"line\\"><span># config.php:     表示忽略当前路径的 config.php 文件</span></span>\\n<span class=\\"line\\"><span># /mtk/           表示过滤整个文件夹</span></span>\\n<span class=\\"line\\"><span># *.zip           表示过滤所有.zip文件</span></span>\\n<span class=\\"line\\"><span># /mtk/do.c       表示过滤某个具体文件</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}')}}]);